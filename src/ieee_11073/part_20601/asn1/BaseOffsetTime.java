/*
Copyright (C) 2011 GSyC/LibreSoft, Universidad Rey Juan Carlos.

Author: Santiago Carot-Nemesio <scarot@libresoft.es>
Author: Jorge Fernández González <jfernandez@libresoft.es>

This program is a (FLOS) free libre and open source implementation
of a multiplatform manager device written in java according to the
ISO/IEEE 11073-20601. Manager application is designed to work in
DalvikVM over android platform.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

package ieee_11073.part_20601.asn1;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "BaseOffsetTime", isSet = false )
    public class BaseOffsetTime implements IASN1PreparedElement {

        @ASN1Element ( name = "bo-seconds", isOptional =  false , hasTag =  false  , hasDefaultValue =  false, hasExplicitOrder = true, declarationOrder = 0  )
    
	private INT_U32 bo_seconds = null;
                
        @ASN1Element ( name = "bo-fraction", isOptional =  false , hasTag =  false  , hasDefaultValue =  false, hasExplicitOrder = true, declarationOrder = 1  )
    
	private INT_U16 bo_fraction = null;
                
        @ASN1Element ( name = "bo-time-offset", isOptional =  false , hasTag =  false  , hasDefaultValue =  false, hasExplicitOrder = true, declarationOrder = 2  )
    
	private INT_I16 bo_time_offset = null;
                
  
        
        public INT_U32 getBo_seconds () {
            return this.bo_seconds;
        }

        

        public void setBo_seconds (INT_U32 value) {
            this.bo_seconds = value;
        }
        
  
        
        public INT_U16 getBo_fraction () {
            return this.bo_fraction;
        }

        

        public void setBo_fraction (INT_U16 value) {
            this.bo_fraction = value;
        }
        
  
        
        public INT_I16 getBo_time_offset () {
            return this.bo_time_offset;
        }

        

        public void setBo_time_offset (INT_I16 value) {
            this.bo_time_offset = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BaseOffsetTime.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            